package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

// SimplifiedFullRunReport SimplifiedFullRunReport
//
// swagger:model SimplifiedFullRunReport
type SimplifiedFullRunReport struct {

	// compile log
	// Required: true
	CompileLog *string `json:"compileLog"`

	// compiler
	// Required: true
	Compiler *string `json:"compiler"`

	// contest Id
	// Required: true
	ContestID *int64 `json:"contestId"`

	// contest name
	// Required: true
	ContestName *string `json:"contestName"`

	// final score
	// Required: true
	FinalScore *string `json:"finalScore"`

	// ip
	IP string `json:"ip,omitempty"`

	// max memory usage
	// Required: true
	MaxMemoryUsage *int64 `json:"maxMemoryUsage"`

	// max time usage
	// Required: true
	MaxTimeUsage *int64 `json:"maxTimeUsage"`

	// participant
	// Required: true
	Participant *Participant `json:"participant"`

	// postprocessor message
	PostprocessorMessage string `json:"postprocessorMessage,omitempty"`

	// precompile checks
	// Required: true
	PrecompileChecks []*AdditionalSolutionCheckResult `json:"precompileChecks"`

	// preliminary score
	// Required: true
	PreliminaryScore *string `json:"preliminaryScore"`

	// problem alias
	// Required: true
	ProblemAlias *string `json:"problemAlias"`

	// problem Id
	// Required: true
	ProblemID *string `json:"problemId"`

	// run Id
	// Required: true
	RunID *int64 `json:"runId"`

	// status
	// Enum: [WAITING FAILED RUNNING FINISHED]
	Status string `json:"status,omitempty"`

	// submission time
	// Required: true
	SubmissionTime *string `json:"submissionTime"`

	// test file type
	// Required: true
	// Enum: [BINARY TEXT]
	TestFileType *string `json:"testFileType"`

	// tests
	// Required: true
	Tests []*TestLog `json:"tests"`

	// time from start
	// Required: true
	TimeFromStart *int64 `json:"timeFromStart"`

	// verdict
	// Required: true
	Verdict *string `json:"verdict"`
}
